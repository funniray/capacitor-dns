{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,iBAAiB,CAAC;AAIjD,MAAM,SAAS,GAAG,cAAc,CAA2B,cAAc,EAAE,EAAE,CAAC,CAAC;AAa/E,MAAM,UAAU,MAAM,CAAC,QAAgB,EAAE,OAAuC,EAAE,QAAyB;IACzG,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE;QACjC,QAAQ,GAAG,OAAO,CAAC;QACnB,OAAO,GAAG,EAAE,CAAC;KACd;IAED,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC;IACnC,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,IAAI,KAAK,CAAC;IAEjC,SAAS,CAAC,MAAM,CAAC,EAAC,QAAQ,EAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAC,SAAS,EAAC,EAAC,EAAE;QAC/C,MAAM,eAAe,GAAG,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAA,EAAE,CAAA,CAAC,CAAC,MAAM,IAAE,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QACnF,IAAI,CAAC,QAAQ;YAAE,OAAO;QAEtB,IAAI,GAAG,EAAE;YACP,QAAQ,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;SACjC;aAAM;YACL,MAAM,OAAO,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;YACnC,IAAI,OAAO,EAAE;gBACX,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;aACjD;iBAAM;gBACL,QAAQ,CAAC,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC;aACvC;SACF;IACH,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAA,EAAE,CAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAG,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC;AAED,MAAM,oBAAoB;IACxB,MAAM,CAAC,QAAgB,EAAE,OAAuB;QAC9C,OAAO,IAAI,OAAO,CAAC,CAAC,GAAG,EAAC,GAAG,EAAC,EAAE;YAC5B,MAAM,CAAC,QAAQ,EAAE,OAAO,IAAI,EAAE,EAAE,CAAC,GAAG,EAAE,OAAO,EAAE,MAAM,EAAC,EAAE;gBACtD,IAAI,GAAG,EAAE;oBACP,GAAG,CAAC,GAAG,CAAC,CAAA;iBACT;qBAAM;oBACL,IAAI,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,GAAG,EAAE;wBAChB,GAAG,CAAC,OAAoB,CAAC,CAAA;qBAC1B;yBAAM;wBACL,GAAG,CAAC,EAAC,OAAO,EAAE,OAAiB,EAAE,MAAM,EAAE,MAAe,EAAC,CAAC,CAAC;qBAC5D;iBACF;YACH,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;IACJ,CAAC;CACF;AAED,MAAM,CAAC,MAAM,WAAW,GAAG,IAAI,oBAAoB,EAAE,CAAC","sourcesContent":["import { registerPlugin } from '@capacitor/core';\n\nimport type {Address, CapacitorDNSNativePlugin} from './definitions';\n\nconst dnsPlugin = registerPlugin<CapacitorDNSNativePlugin>('CapacitorDNS', {});\n\ntype LookupOptions = {\n  family?: 0 | 4 | 6,\n  hints?: any,\n  all?: boolean,\n  verbatim?: boolean\n}\n\ntype LookupCallback =\n    (err: Error | null, address?: Address[] | string, family?: number) => void\n\n\nexport function lookup(hostname: string, options: LookupOptions | LookupCallback, callback?: LookupCallback): void {\n  if (typeof options === \"function\") {\n    callback = options;\n    options = {};\n  }\n\n  const family = options.family || 0;\n  const all = options.all || false;\n\n  dnsPlugin.lookup({hostname}).then(({addresses})=> {\n    const familyAddresses = family ? addresses.filter(a=>a.family==family) : addresses;\n    if (!callback) return;\n\n    if (all) {\n      callback(null, familyAddresses);\n    } else {\n      const address = familyAddresses[0];\n      if (address) {\n        callback(null, address.address, address.family);\n      } else {\n        callback(new Error(\"Host not found\"));\n      }\n    }\n  }).catch(e=>callback?.(e));\n}\n\nclass CapacitorDNSPromises {\n  lookup(hostname: string, options?: LookupOptions): Promise<Address | Address[]> {\n    return new Promise((res,rej)=>{\n      lookup(hostname, options || {}, (err, address, family)=> {\n        if (err) {\n          rej(err)\n        } else {\n          if (options?.all) {\n            res(address as Address[])\n          } else {\n            res({address: address as string, family: family as 4 | 6});\n          }\n        }\n      })\n    })\n  }\n}\n\nexport const dnsPromises = new CapacitorDNSPromises();\n"]}